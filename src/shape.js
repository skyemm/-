class Shape {
    type = 0 //一共有7中类型
    angle = 0 //四种方向
    origin = [0, 3] //坐标原点
    shape = [
            //定义一字型数据
            [
                [
                    [1, 1, 1, 1],
                    [0, 0, 0, 0],
                    [0, 0, 0, 0],
                    [0, 0, 0, 0]
                ],
                [
                    [0, 1, 0, 0],
                    [0, 1, 0, 0],
                    [0, 1, 0, 0],
                    [0, 1, 0, 0]
                ],
                [
                    [1, 1, 1, 1],
                    [0, 0, 0, 0],
                    [0, 0, 0, 0],
                    [0, 0, 0, 0]
                ],
                [
                    [0, 1, 0, 0],
                    [0, 1, 0, 0],
                    [0, 1, 0, 0],
                    [0, 1, 0, 0]
                ]
            ],
            //定义t字型
            [
                [
                    [1, 1, 1],
                    [0, 1, 0],
                    [0, 0, 0]
                ],
                [
                    [0, 0, 1],
                    [0, 1, 1],
                    [0, 0, 1]
                ],
                [
                    [0, 0, 0],
                    [0, 1, 0],
                    [1, 1, 1]
                ],
                [
                    [1, 0, 0],
                    [1, 1, 0],
                    [1, 0, 0]
                ]
            ],
            //定义f型
            [
                [
                    [1, 1, 1],
                    [0, 0, 1],
                    [0, 0, 0]
                ],
                [
                    [0, 0, 1],
                    [0, 0, 1],
                    [0, 1, 1]
                ],
                [
                    [0, 0, 0],
                    [1, 0, 0],
                    [1, 1, 1]
                ],
                [
                    [1, 1, 0],
                    [1, 0, 0],
                    [1, 0, 0]
                ]
            ],
            //定义反f型
            [
                [
                    [1, 1, 1],
                    [1, 0, 0],
                    [0, 0, 0]
                ],
                [
                    [0, 1, 1],
                    [0, 0, 1],
                    [0, 0, 1]
                ],
                [
                    [0, 0, 0],
                    [0, 0, 1],
                    [1, 1, 1]
                ],
                [
                    [1, 0, 0],
                    [1, 0, 0],
                    [1, 1, 0]
                ]
            ],
            //定义z字型
            [
                [
                    [1, 1, 0],
                    [0, 1, 1],
                    [0, 0, 0]
                ],
                [
                    [0, 0, 1],
                    [0, 1, 1],
                    [0, 1, 0]
                ],
                [
                    [0, 0, 0],
                    [1, 1, 0],
                    [0, 1, 1]
                ],
                [
                    [0, 1, 0],
                    [1, 1, 0],
                    [1, 0, 0]
                ]
            ],
            //定义反z字形
            [
                [
                    [0, 1, 1],
                    [1, 1, 0],
                    [0, 0, 0]
                ],
                [
                    [0, 1, 0],
                    [0, 1, 1],
                    [0, 0, 1]
                ],
                [
                    [0, 0, 0],
                    [0, 1, 1],
                    [1, 1, 0]
                ],
                [
                    [1, 0, 0],
                    [1, 1, 0],
                    [0, 1, 0]
                ]
            ],
            //定义田字形
            [
                [
                    [1, 1, 1],
                    [1, 1, 1],
                    [1, 1, 1]
                ],
                [
                    [1, 1, 1],
                    [1, 1, 1],
                    [1, 1, 1]
                ],
                [
                    [1, 1, 1],
                    [1, 1, 1],
                    [1, 1, 1]
                ],
                [
                    [1, 1, 1],
                    [1, 1, 1],
                    [1, 1, 1]
                ]
            ]
        ]
        //获取图形形状
    getShape(type, angle) {
        //获取形状
        var shap = this.shape[type][angle];
        //存储形状坐标
        var pos = [];
        //坐标重定位到界面
        shap.forEach((row, y) => {
            row.forEach((block, x) => {
                if (block == 1) {
                    pos.push([this.origin[0] + y, this.origin[1] + x]);
                }
            });
        });
        return pos;
    }

    //获取形状并展示在页面中
    showShape() {
        this.getShape(this.type, this.angle).forEach(pos => {
            this.blocks[pos[0]][pos[1]] = 1;
        })
    }


    addNewShape() {
        //重新规定原点坐标
        this.origin = [0, 3]

        //重新定义角度
        this.angle = 0;

        //随机生成形状，即随机生成一个0-6之间的随机数
        this.type = Math.floor(Math.random() * 7)

        //显示新形状
        this.showShape()
    }

    //形状的旋转
    rotate() {
        //获取新角度
        var newAngle = (this.angle + 1) % 4;
        this.angle = newAngle;
        //清除原有的形状
        this.change(1, 0);
        //显示新的形状
        this.showShape();
        //渲染新的效果
        this.render();
    }
}